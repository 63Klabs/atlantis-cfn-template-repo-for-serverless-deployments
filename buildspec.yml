version: 0.2

# Recommended Pipeline Template "templates/v2/pipeline/template-pipeline-build-only"
# Assumes HOST_BUCKET is already set in CodeBuild environment variables

env:
  variables:
    SOURCE_DIR: "templates"
    S3_HOST_BASE_PATH: "/atlantis/" # Must be single / or begin and end with / (suggested: /atlantis/)
    DRYRUN: "" # set to "--dryrun" if performing dry runs

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - pip install --upgrade awscli boto3

  pre_build:
    commands:
      - echo $S3_STATIC_HOST_BUCKET$S3_HOST_BASE_PATH # S3_STATIC_HOST_BUCKET is set in CodeBuild environment variables
      - echo $DRYRUN

  build:
    commands:
      - echo "Build phase started at $(date)"

  post_build:
    commands:
    
      - export S3_HOST_BASE_PATH_UTILITIES="${S3_HOST_BASE_PATH}utilities/v2/"
      - export S3_HOST_BASE_PATH_TEMPLATES="${S3_HOST_BASE_PATH}templates/"

      # Replace placeholder bucketname with template bucket name
      - echo "Replacing placeholder bucketname with actual bucket name in templates..."
      - ./scripts/replace_bucket_name.py $SOURCE_DIR $S3_STATIC_HOST_BUCKET

      # We use versioning on the buckets so that we can specify a specific version of the template to use
      # Therefore, so we do not create extra versions, we will use only copy changed files.

      # Copy template files to host bucket
      - echo "Executing script to sync templates..."
      - ./scripts/sync_templates.sh $SOURCE_DIR $S3_STATIC_HOST_BUCKET $S3_HOST_BASE_PATH_TEMPLATES $DRYRUN
      # If you have additional directories you can sync them next as long as you have a unique local and unique remote directory (don't use same as previous otherwise it will perform a delete)
#      - ./scripts/sync_templates.sh custom-templates $S3_STATIC_HOST_BUCKET $S3_HOST_BASE_PATH/custom-templates $DRYRUN

      # Send sharable scripts to host bucket
      - echo "Executing script to upload scripts..."
      - ./scripts/upload_scripts.sh $S3_STATIC_HOST_BUCKET $S3_HOST_BASE_PATH_UTILITIES scripts $DRYRUN

artifacts:
  files:
    - '**/*'