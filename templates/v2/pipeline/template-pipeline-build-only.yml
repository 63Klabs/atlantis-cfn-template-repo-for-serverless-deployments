AWSTemplateFormatVersion: "2010-09-09"
Description: "CodePipeline for Automated Deployments from repository using only CodeBuild - Deployed using SAM"

# Atlantis for AWS SAM Deployments
# Pipeline Infrastructure Template
# Author: Chad Kluck - 63klabs.net
# Version: v2.0.3/2025-05-12

# Documentation, Issues/Feature Requests, Latest Updates, and Security Reports on GitHub:
# https://github.com/63klabs/atlantis-cfn-template-repo-for-serverless-deployments/

# Creates an AWS CodePipeline that is triggered when a watched branch
# receives a new commit. Uses CodeBuild. DOES NOT have a CloudFormation stage.
# Use case is when only CodeBuild is needed such as for builds and copies to S3.

# USE WITH:
# - CodeCommit repository and S3 bucket.

# =============================================================================
# META DATA
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-interface.html
# 

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Label:
          default: "Application Resource Naming"
        Parameters:
          - Prefix
          - ProjectId
          - StageId
          - S3BucketNameOrgPrefix
          - RolePath
      -
        Label:
          default: "Deployment Environment Information"
        Parameters:
          - DeployEnvironment
          - DeployBucket
          - S3StaticHostBucket
          - BuildSpec
      -
        Label:
          default: "External Resources and Alarm Notifications"
        Parameters:
          - ParameterStoreHierarchy
          - AlarmNotificationEmail
          - PermissionsBoundaryArn
      -
        Label:
          default: "Code Repository"
        Parameters:
          - Repository
          - RepositoryBranch

# =============================================================================
# PARAMETERS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#

Parameters:

  # ---------------------------------------------------------------------------
  # Application Resource Naming
  #
  # General Practice:
  # - Prefix max 8 characters
  # - ProjectId max 20 characters
  # - StageId max 8 characters
  # - Hyphen between Prefix, ProjectId, StageId, ResourceId is 3 characters
  # This adds up to 39 characters leaving 24 characters for the resource identifier (Used at end of resource name such as *-SalesData or *-CfnSvcRole).
  # For buckets without S3 Org Prefixes, the length of the bucket resource identifier is limited to 2 (Region + Acct takes up ~22 on their own).
  # Try to keep the length of the S3 bucket prefix and resource identifier to a minimum for bucket names.

  Prefix:
    Type: String
    Description: "Prefix pre-pended to all resources. This can be thought of as a Name Space used to identify ownership/access for teams, departments, etc. For example, resources named ws-* could belong to the web service team and could have IAM permissions to allow access to other ws-* resources. The Prefix must have a corresponding CloudFormation Service Role. Short, descriptive 2-6 character values work best. Due to resource naming length restrictions, length of Prefix + Project ID should not exceed 28 characters. Resources are named <Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    Default: "acme" 
    AllowedPattern: "^[a-z][a-z0-9-]{0,6}[a-z0-9]$"
    MinLength: 2
    MaxLength: 8
    ConstraintDescription: "2 to 8 characters. Lower case alphanumeric and dashes. Must start with a letter and end with a letter or number. Length of Prefix + Project ID should not exceed 28 characters."

  ProjectId:
    Type: String
    Description: "This is the Project or Application Identifier. If you receive 'S3 bucket name too long' errors during stack creation, then you must shorten the Project ID or use an S3 Org Prefix. Due to resource naming length restrictions, length of Prefix + Project ID should not exceed 28 characters. Resources are named <Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    AllowedPattern: "^[a-z][a-z0-9-]{0,24}[a-z0-9]$"
    MinLength: 2
    MaxLength: 26
    ConstraintDescription: "Minimum of 2 characters (suggested maximum of 20). Lower case alphanumeric and dashes. Must start with a letter and end with a letter or number. Length of Prefix + Project ID should not exceed 28 characters."

  StageId:
    Type: String
    Description: "This is an alias for the branch. It does not need to match RepositoryBranch or DeployEnvironment. Due to resource naming restrictions you can use this to provide shorter names without special characters that are allowed in branch names. For example if you have a 'test/feature-98' branch, you could use 'tf98' as the StageId. Resources are named <Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    AllowedPattern: "^[a-z][a-z0-9-]{0,6}[a-z0-9]$"
    MinLength: 2
    MaxLength: 8
    ConstraintDescription: "2 to 8 characters. Lower case alphanumeric and dashes. Must start with a letter and end with a letter or number."

  S3BucketNameOrgPrefix:
    Type: String
    Description: "By default, to enforce uniqueness, buckets include account and region in the bucket name. However, due to character limits, you can specify your own S3 prefix (like an org code). This will be used in addition to the Prefix entered above. Note that this length is shared with the recommended length of 20 characters for Resource Identifiers. So if you have a 10 character S3BucketNameOrgPrefix, you are limited to 10 characters for your bucket name identifier in your templates. Buckets are named <Prefix>-<Region>-<AccountId>-<ProjectId>-<StageId>-<ResourceId> or <S3OrgPrefix>-<Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    Default: ""
    AllowedPattern: "^[a-z0-9][a-z0-9-]{0,18}[a-z0-9]$|^$"
    ConstraintDescription: "May be empty or 2 to 20 characters (8 or less recommended). Lower case alphanumeric and dashes. Must start and end with a letter or number."

  RolePath:
    Type: String
    Description: "Path to use for IAM Roles and Policies. You may wish to separate out your applications from users, or create seperate paths per prefix or application. Specific paths may required by permission boundaries. Ex: /ws-hello-world-test/ or /app_role/"
    Default: "/"
    AllowedPattern: "^\\/([a-zA-Z0-9-_]+[\\/])+$|^\\/$"
    ConstraintDescription: "May only contain alphanumeric characters, forward slashes, underscores, and dashes. Must begin and end with a slash."

  # ---------------------------------------------------------------------------
  # Deployment Environment Identification

  DeployEnvironment:
    Type: String
    Description: "What deploy/testing environment will this run under? An environment can contain multiple stages (for example 'test' and 't98' would be in 'TEST' environment, and 'beta' and 'prod' stages would deploy to 'PROD'). Utilize this environment variable to determine your tests, app logging levels, and conditionals in the template. For example, PROD will use gradual deployment while DEV and TEST is AllAtOnce. Other resources, such as dashboards and alarms  (which cost money) could be created in PROD and not DEV or TEST. Suggested use: DEV for local SAM deployment, TEST for test/QA deployments, PROD for stage, beta, and main/prod deployments."
    Default: "PROD"
    AllowedValues: ["DEV", "TEST", "PROD"]
    ConstraintDescription: "Must specify DEV, TEST, or PROD."

  DeployBucket:
    Type: String
    Description: "An already existing S3 bucket name to save build artifacts to. If this is left blank one will be created specific to the pipeline. Must be in the same AWS account and region as the stack."
    Default: ""
    AllowedPattern: "^[a-z0-9][a-z0-9-]{0,62}[a-z0-9]$|^$"
    ConstraintDescription: "May only contain alphanumeric characters, dashes, and must begin and end with a letter or number."

  S3StaticHostBucket:
    Type: String
    Description: "An already existing S3 bucket name the build and deploy stage will copy files to. Passed as S3_STATIC_HOST_BUCKET to CodeBuild. Can be left blank if CodeBuild will programmatically construct the bucket name, or doesn't need a S3_STATIC_HOST_BUCKET value."
    Default: ""
    AllowedPattern: "^[a-z0-9][a-z0-9-]{0,62}[a-z0-9]$|^$"
    ConstraintDescription: "May only contain alphanumeric characters, dashes, and must begin and end with a letter or number."

  BuildSpec:
    Type: String
    Description: "The local or S3 URI of the CodeBuild buildspec.yml file. For example, 'buildspec.yml', 'deploy/buildspec.yml' or 's3://mybucket/buildspec.yml'. Best practice is to have a single buildspec file for all deployments. This option exists if you cannot store your buildspec file with your source code OR wish to use a central buildspec for a group of deployments. This is not for managing multiple buildspecs on a single repo. Default is buildspec.yml, and blank will use the default buildspec.yml in the root of the repository. Though Source.BuildSpec uses an ARN for S3 locations, an S3 url is requested to make it easier to parse for permissions and other uses."
    Default: "buildspec.yml"
    AllowedPattern: "^s3:\\/\\/[a-zA-Z0-9][a-zA-Z0-9\\-]{1,61}[a-zA-Z0-9]\\/.*$|^[a-zA-Z0-9_\\-\\/]*(buildspec\\.yml)$|^$"
    ConstraintDescription: "Must be a valid S3 URI or a local path ending with 'buildspec.yml'. For example, 'buildspec.yml', 'deploy/buildspec.yml' or 's3://mybucket/buildspec.yml'. May be empty."

  # ---------------------------------------------------------------------------
  # External Resources and Alarm Notifications

  ParameterStoreHierarchy:
    Type: String
    Description: "Parameters specific to the application may be organized within a hierarchy based on your organizational or operations structure. For example, /Finance/ops/ for this value would then generate /Finance/ops/<DeployEnvironment>/<Prefix>-<ProjectId>-<StageId>/<parameterName>. Must either be a single '/' or begin and end with a '/'."
    Default: "/"
    AllowedPattern: "^\\/([a-zA-Z0-9_.\\-]*[\\/])*$|^$"
    ConstraintDescription: "Must only contain alpha-numeric, dashes, underscores, or slashes. Must be a single slash or begin and end with a slash. (/Finance/, /Finance/ops/, or /)"

  AlarmNotificationEmail:
    Type: String
    Description: "Email address to send notifications to when alarms are triggered. Be sure to check the inbox as you will need to confirm the subscription."
    AllowedPattern: "^[\\w\\-\\.]+@([\\w\\-]+\\.)+[\\w\\-]{2,4}$"
    ConstraintDescription: "A valid email address"

  PermissionsBoundaryArn:
    Type: String
    Description: "Permissions Boundary is a policy attached to a role to further restrict the permissions of the role. Your organization may or may not require boundaries. If left empty, no permissions boundary will be used."
    Default: ""
    AllowedPattern: "^$|^arn:aws:iam::\\d{12}:policy\\/[\\w+=,.@\\-\\/]*[\\w+=,.@\\-]+$"
    ConstraintDescription: "Must be empty or a valid IAM Policy ARN in the format: arn:aws:iam::{account_id}:policy/{policy_name}"

  # ---------------------------------------------------------------------------
  # Code Repository
  # Used only by this template-pipeline and not passed on to application infrastructure stack except as tags

  Repository:
    Type: String
    Description: "What repository will be used?"
    MinLength: 2
    AllowedPattern: "^[a-zA-Z0-9][a-zA-Z0-9_\\-]{0,62}[a-zA-Z0-9]$"
    ConstraintDescription: "Must be a valid CodeCommit repository name. Must be at least 2 characters long."

  RepositoryBranch:
    Type: String
    Description: What branch of CodeCommit will be used? Typically this is the same name as the stage, but may be different if there are multiple deploys operating off the same branch.
    Default: "main"
    AllowedPattern: "^[a-zA-Z0-9][a-zA-Z0-9_\\-\\/]{0,14}[a-zA-Z0-9]$"
    ConstraintDescription: "Must be a valid CodeCommit branch name"

# =============================================================================
# CONDITIONS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-conditions.html
#

Conditions:
  IsNotDevelopment: !Not [!Equals [!Ref DeployEnvironment, "DEV"]]
  # IsDevelopment: !Equals [!Ref DeployEnvironment, "DEV"] # currently unused - uncomment if you have a use for it
  UseS3BucketNameOrgPrefix: !Not [!Equals [!Ref S3BucketNameOrgPrefix, ""]]
  HasPermissionsBoundaryArn: !Not [!Equals [!Ref PermissionsBoundaryArn, ""]]
  UseOwnS3DeployBucket: !Equals [!Ref DeployBucket, ""]
  HasS3StaticHostBucket: !Not [!Equals [!Ref S3StaticHostBucket, ""]]
  HasS3BuildSpecLocation: !And 
    - !Not [!Equals [!Ref BuildSpec, ""]]
    - !Equals [!Select [0, !Split [":", !Ref BuildSpec]], "s3"]
  UseDefaultBuildSpecLocation: !Equals [!Ref BuildSpec, ""]


# =============================================================================
# RESOURCES
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html  
#

Resources:
  
  # ---------------------------------------------------------------------------
  # -- IAM Service Roles and Policies --
  # --
  # AWS CodePipeline and its resources require permissions perform operations
  # --
  # Practice The Principle of Least Privilege 
  # IAM policies should be scoped down to give only necessary actions on 
  # resources specific to this deployment.
  # --
  
  # -- SourceEventServiceRole --

  SourceEventServiceRole:
    Type: AWS::IAM::Role
    Condition: IsNotDevelopment
    Properties:
      Path: !Ref RolePath
      RoleName: !Sub "${Prefix}-Worker-${ProjectId}-${StageId}-SourceEventServiceRole"
      Description: "Service Role to allow Events to trigger AWS CodePipeline execution"
      PermissionsBoundary: !If [HasPermissionsBoundaryArn, !Ref PermissionsBoundaryArn, !Ref 'AWS::NoValue' ]
      AssumeRolePolicyDocument:
        Statement:
        - Sid: "EventTrustPolicy"
          Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service:
            - events.amazonaws.com
      Policies:
      - PolicyName: !Sub "${Prefix}-Worker-${ProjectId}-${StageId}-SourceEventServicePolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Action:
            - codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
            - !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Prefix}-${ProjectId}-${StageId}-Pipeline"

  # -- CodePipeline Service Role --

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Condition: IsNotDevelopment
    Properties:
      Path: !Ref RolePath
      RoleName: !Sub "${Prefix}-Worker-${ProjectId}-${StageId}-CodePipelineServiceRole"
      Description: "Service Role to access resources during execution of AWS CodePipeline to get, build, and deploy application infrastructure"
      PermissionsBoundary: !If [HasPermissionsBoundaryArn, !Ref PermissionsBoundaryArn, !Ref 'AWS::NoValue' ]
      AssumeRolePolicyDocument:
        Statement:
        - Sid: "CodePipelineTrustPolicy"
          Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service:
            - codepipeline.amazonaws.com
      Policies:
      - PolicyName: !Sub "${Prefix}-Worker-${ProjectId}-${StageId}-CodePipelineServicePolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:

          - Sid: SourcePhaseCodeCommitReadOnly
            Effect: Allow
            Action:
            - codecommit:GetRepositoryTriggers
            - codecommit:GitPull
            - codecommit:GetObjectIdentifier
            - codecommit:GetFolder
            - codecommit:GetFile
            - codecommit:GetRepository
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:UploadArchive
            - codecommit:GetUploadArchiveStatus
            Resource: !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${Repository}'

          - Sid: BuildPhase
            Action:
            - codebuild:*
            Effect: Allow
            Resource: 
            - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*"
            - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${Prefix}-${ProjectId}-${StageId}-Build"
            Condition:
              StringEquals:
                "aws:ResourceTag/atlantis:ApplicationDeploymentId": !Sub "${Prefix}-${ProjectId}-${StageId}"

          - Sid: ManageArtifactsInS3
            Action:
            - s3:Get*
            - s3:List*
            - s3:PutObject
            Effect: Allow
            Resource:
            - !If [UseOwnS3DeployBucket, !GetAtt S3DeployBucket.Arn, !Sub "arn:aws:s3:::${DeployBucket}"]
            - !If [UseOwnS3DeployBucket, !Join [ '/', [ !GetAtt S3DeployBucket.Arn, '*' ] ], !Sub "arn:aws:s3:::${DeployBucket}/*"]

  # -- CodeBuild Service Role --

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Condition: IsNotDevelopment
    Properties:
      Path: !Ref RolePath
      RoleName: !Sub "${Prefix}-Worker-${ProjectId}-${StageId}-CodeBuildServiceRole"
      Description: "Service Role to access resources during the application infrastructure build phase of AWS CodePipeline"
      PermissionsBoundary: !If [HasPermissionsBoundaryArn, !Ref PermissionsBoundaryArn, !Ref 'AWS::NoValue' ]
      AssumeRolePolicyDocument:
        Statement:
        - Sid: "CodeBuildTrustPolicy"
          Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: codebuild.amazonaws.com
      Policies:
      - PolicyName: !Sub "${Prefix}-Worker-${ProjectId}-${StageId}-CodeBuildServicePolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:

          - Sid: "AllowCodeBuildToManageItsLogs"
            Effect: Allow
            Action:
            - logs:*
            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Prefix}-${ProjectId}-${StageId}-Build:*"

          - Sid: "AllowCodeBuildToManageItsArtifacts"
            Effect: Allow
            Action:
            - s3:Get*
            - s3:List*
            - s3:PutObject
            Resource:
            - !If [UseOwnS3DeployBucket, !GetAtt S3DeployBucket.Arn, !Sub "arn:aws:s3:::${DeployBucket}"]
            - !If [UseOwnS3DeployBucket, !Join [ '/', [ !GetAtt S3DeployBucket.Arn, '*' ] ], !Sub "arn:aws:s3:::${DeployBucket}/*"]

          # - Sid: "AllowCodeBuildToManageItsKeys" # TODO: Scope Down
          #   Effect: Allow
          #   Action:
          #   - kms:GenerateDataKey*
          #   - kms:Encrypt
          #   - kms:Decrypt
          #   Resource: '*'

          - Sid: "SsmAccessDuringCodeBuild"
            Action:
            - ssm:PutParameter # for generating tokens and keys
            - ssm:AddTagsToResource
            - ssm:GetParameters
            - ssm:GetParameter
            - ssm:GetParametersByPath
            - ssm:ListTagsForResource
            Effect: Allow
            Resource: 
              !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${ParameterStoreHierarchy}${DeployEnvironment}/${Prefix}-${ProjectId}-${StageId}/*"

          # We have 4 permissions sets that will allow us to copy objects (such as static assets) over to S3.

          - Sid: "AllowListBuckets"
            Effect: Allow
            Action:
            - s3:ListBucket
            - s3:GetBucketLocation
            Resource:
            - "arn:aws:s3:::*"

          # General buckets for many application projects with paths devoted to applications
          - Sid: CopyAssetsToS3DuringBuildByPath
            Action:
            - s3:PutObject
            - s3:Get*
            - s3:List*
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - !Sub "arn:aws:s3:::*/${Prefix}-${ProjectId}/${StageId}/*"
            - !Sub "arn:aws:s3:::*/${Prefix}-${ProjectId}-${StageId}/*"
            - !Sub "arn:aws:s3:::*/${Prefix}/${ProjectId}/${StageId}/*"

          # A bucket devoted to the application project shared among all deployments of the application
          - Sid: CopyAssetsToS3DuringBuildByBucketApplicationTag
            Action:
            - s3:PutObject
            - s3:Get*
            - s3:List*
            - s3:DeleteObject
            Effect: Allow
            Resource: !Join
            - ""
            - - "arn:aws:s3:::"
              - !If [UseS3BucketNameOrgPrefix, !Sub "${S3BucketNameOrgPrefix}-", "" ]
              - !Sub "${Prefix}-${ProjectId}-*/${StageId}/*"

          # A bucket devoted to the specific application deployment
          - Sid: CopyAssetsToS3DuringBuildByBucketApplicationDeploymentTag
            Action:
            - s3:PutObject
            - s3:Get*
            - s3:List*
            - s3:DeleteObject
            Effect: Allow
            Resource: !Join
            - ""
            - - "arn:aws:s3:::"
              - !If [UseS3BucketNameOrgPrefix, !Sub "${S3BucketNameOrgPrefix}-", "" ]
              - !Sub "${Prefix}-${ProjectId}-${StageId}-*/*"

          # A S3StaticHostBucket if HasS3StaticHostBucket condition is met
          # create a policy statement if HasS3StaticHostBucket condition is met
          - !If
            - HasS3StaticHostBucket
            - Sid: CopyAssetsToS3HostBucketDuringBuild
              Action:
              - s3:PutObject
              - s3:Get*
              - s3:List*
              - s3:DeleteObject
              Effect: Allow
              Resource: 
                - !Sub "arn:aws:s3:::${S3StaticHostBucket}"
                - !Sub "arn:aws:s3:::${S3StaticHostBucket}/*"
            - !Ref 'AWS::NoValue'

          # Copy and read from a remote bucket containing the buildspec.yml file
          - !If 
            - HasS3BuildSpecLocation
            - Sid: CopyBuildSpecFromS3ForBuild
              Action:
              - s3:Get*
              - s3:List*
              Effect: Allow
              Resource: 
                - !Join
                  - ""
                  - - "arn:aws:s3:::"
                    - !Select [0, !Split ["/", !Select [1, !Split ["s3://", !Ref BuildSpec]]]]
                # Specific file permission - exact path to the buildspec file
                - !Join
                  - ""
                  - - "arn:aws:s3:::"
                    - !Select [1, !Split ["s3://", !Ref BuildSpec]]

            - !Ref 'AWS::NoValue'

  # ---------------------------------------------------------------------------
  # -- AWS CodePipeline Resources --
  # --
  # AWS CodePipeline is a continuous delivery service that automates the release process for your software.
  # An event rule monitors changes to your source code repository and triggers a pipeline to build your application.
  # The pipeline runs your build, tests, and deploys your application infrastructure via CloudFormation
  # Resources include S3 buckets to store artifacts, CodeBuild projects to build your application, and Code Deploy and CloudFormation to deploy.

  # -- Source Event --
  # --
  # Event Rule to detect commits to a specific branch in CodeCommit and trigger the pipeline.
  # https://docs.aws.amazon.com/codepipeline/latest/userguide/triggering.html
  # --

  SourceEvent:
    Type: AWS::Events::Rule
    Condition: IsNotDevelopment
    Properties:
      Name: !Sub "${Prefix}-${ProjectId}-${StageId}-SourceEvent"
      Description: Rule for Amazon CloudWatch Events to detect changes to the source repository and trigger pipeline execution
      EventPattern:
        detail:
          event:
          - referenceCreated
          - referenceUpdated
          referenceName: 
          - !Ref RepositoryBranch
          referenceType:
          - branch
        detail-type:
        - CodeCommit Repository State Change
        resources:
        - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${Repository}'
        source:
        - aws.codecommit
      State: ENABLED
      Targets:
      - Arn: !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Prefix}-${ProjectId}-${StageId}-Pipeline'
        Id: ProjectPipelineTarget
        RoleArn: !GetAtt 'SourceEventServiceRole.Arn'

  # -- CodeBuild Project --

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    # DependsOn:
    # - CodeBuildServiceRole
    Condition: IsNotDevelopment
    Properties:
      Name: !Sub '${Prefix}-${ProjectId}-${StageId}-Build'
      Description: !Sub "CodeBuild Project for ${Prefix}-${ProjectId}-${StageId}"
      ServiceRole: !GetAtt 'CodeBuildServiceRole.Arn'
      Artifacts:
        Packaging: ZIP
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_CUSTOM_CACHE
      Environment:
        # ComputeType, Type, Image and the Build Runtime versions all rely on each other
        # ComputeType and Environment Type: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html
        # Build runtime versions: https://docs.aws.amazon.com/codebuild/latest/userguide/runtime-versions.html
        #                         https://docs.aws.amazon.com/codebuild/latest/userguide/ec2-compute-images.html
        #                         https://docs.aws.amazon.com/codebuild/latest/userguide/available-runtimes.html
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0 # Node 20 / Python 3.12
        # Image: aws/codebuild/java:openjdk-11 # java

        # BUILD ENVIRONMENT VARIABLES : You can specify any other environment variables your buildspec.yml is looking for.
        EnvironmentVariables:
        - Name: AWS_PARTITION
          Value: !Ref 'AWS::Partition'
        - Name: AWS_REGION
          Value: !Ref 'AWS::Region'
        - Name: AWS_ACCOUNT
          Value: !Ref 'AWS::AccountId'
        - Name: S3_DEPLOY_BUCKET # informs AWS CodeBuild where it can retrieve your code artifact.
          Value: !If [UseOwnS3DeployBucket, !Ref S3DeployBucket, !Ref DeployBucket ]
        - Name: PREFIX
          Value: !Ref 'Prefix'
        - Name: PROJECT_ID
          Value: !Ref 'ProjectId'
        - Name: STAGE_ID
          Value: !Ref 'StageId'
        - Name: S3_BUCKET_NAME_ORG_PREFIX
          Value: !If [UseS3BucketNameOrgPrefix, !Sub "${S3BucketNameOrgPrefix}-", "" ]
        - Name: REPOSITORY
          Value: !Ref 'Repository'
        - Name: REPOSITORY_BRANCH
          Value: !Ref 'RepositoryBranch'
        - Name: PARAM_STORE_HIERARCHY
          Value: !Sub '${ParameterStoreHierarchy}${DeployEnvironment}/${Prefix}-${ProjectId}-${StageId}/'
        - Name: DEPLOY_ENVIRONMENT
          Value: !Ref 'DeployEnvironment'
        - Name: ALARM_NOTIFICATION_EMAIL
          Value: !Ref 'AlarmNotificationEmail'
        - Name: S3_STATIC_HOST_BUCKET
          Value: !Ref 'S3StaticHostBucket'
        - Name: ROLE_PATH
          Value: !Ref 'RolePath'
        - Name: PERMISSIONS_BOUNDARY_ARN
          Value: !Ref 'PermissionsBoundaryArn'
        - Name: NODE_ENV
          Value: "production" # We do not need dev dependencies deployed to Lambda as they are for local development. IF you needed to run tests during build, then temporarily set in buildspec but be sure final deploy is based on production dependencies. (Build twice)  
      Source:
        Type: CODEPIPELINE
        BuildSpec: !If 
          - HasS3BuildSpecLocation
          - !Join
            - ""
            - - "arn:aws:s3:::"
              - !Select [1, !Split ["s3://", !Ref BuildSpec]]
          - !If
            - UseDefaultBuildSpecLocation
            - "buildspec.yml"
            - !Ref BuildSpec


  # ---------------------------------------------------------------------------
  # -- Log Group for CodeBuild Project --
  # -- (Just so we can add a retention policy)

  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsNotDevelopment
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${Prefix}-${ProjectId}-${StageId}-Build"
      RetentionInDays: 90 # Set to your own retention policy - how long do you want to keep build logs?

  # ---------------------------------------------------------------------------
  # -- S3 Artifact Bucket Policy --
  # This policy is applied to the Amazon S3 bucket that AWS CodePipeline will use as your artifact store.

  S3ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: UseOwnS3DeployBucket
    Properties:
      Bucket: !Ref 'S3DeployBucket'
      PolicyDocument:
        Version: "2012-10-17"
        Id: SSEAndSSLPolicy
        Statement:

        # # This is a recommended policy statement
        # # https://docs.aws.amazon.com/code-samples/latest/catalog/cloudformation-codepipeline-template-codepipeline-s3-events-yaml.yml.html
        #  -
        #    Sid: DenyUnEncryptedObjectUploads
        #    Effect: Deny
        #    Principal: '*'
        #    Action: s3:PutObject
        #    Resource: !Join [ '', [ !GetAtt CodePipelineArtifactStoreBucket.Arn, '/*' ] ]
        #    Condition:
        #      StringNotEquals: 
        #        s3:x-amz-server-side-encryption: aws:kms

        - Sid: "DenyNonSecureTransportAccess"
          Effect: Deny
          Principal: "*"
          Action: "s3:*"
          Resource:
            - !GetAtt S3DeployBucket.Arn
            - !Join [ '/', [ !GetAtt S3DeployBucket.Arn, '*' ] ]
          Condition:
            Bool:
                "aws:SecureTransport": false

        - Sid: WhitelistedGet
          Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetBucketVersioning
          Condition:
            Bool:
              aws:SecureTransport: false
          Effect: Allow
          Principal:
            AWS:
              Fn::If:
              - IsNotDevelopment
              - - !GetAtt 'CodePipelineServiceRole.Arn' # AWS CodeBuild retrieves the source code from the artifact bucket.
                - !GetAtt 'CodeBuildServiceRole.Arn' # AWS CloudFormation retrieves a template file from this bucket to create the runtime resources.
              - - !Ref 'AWS::NoValue'
          Resource:
            - !GetAtt S3DeployBucket.Arn
            - !Join [ '/', [ !GetAtt S3DeployBucket.Arn, '*' ] ]
          
        - Sid: WhitelistedPut
          Action:
          - s3:PutObject
          Effect: Allow
          Principal:
            AWS:
              Fn::If:
              - IsNotDevelopment
              - - !GetAtt 'CodePipelineServiceRole.Arn'
                - !GetAtt 'CodeBuildServiceRole.Arn'
              - - !Ref 'AWS::NoValue'
          Resource:
            - !GetAtt S3DeployBucket.Arn
            - !Join [ '/', [ !GetAtt S3DeployBucket.Arn, '*' ] ]

  # ---------------------------------------------------------------------------
  # -- S3 Artifact Bucket --

  S3DeployBucket:
    Type: AWS::S3::Bucket
    Condition: UseOwnS3DeployBucket
    DeletionPolicy: Delete # Set to Delete because if we delete the pipeline, we don't need the bucket
    Properties:
      BucketName: !Join
        - "-"
        - - !If [UseS3BucketNameOrgPrefix, !Sub "${S3BucketNameOrgPrefix}-${Prefix}", !Sub "${Prefix}-${AWS::Region}-${AWS::AccountId}" ]
          - !Sub "${ProjectId}-${StageId}-pipeline"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: "ExpireObjects"
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            ExpirationInDays: 730 # 2 years - Unfortunately, you can't keep x number of deploys. However, you need to make sure you hang onto a few previous ones in case you need to roll back. If 2 yrs isn't good enough, you could create a script that deletes all but the last x recent deploys from the bucket. They don't actually take up a lot of space but why keep things around?
            NoncurrentVersionExpirationInDays: 30
            Status: "Enabled" # Enable so that you purge old build artifacts - they serve no use, not even for debug and it saves space and $$$

  # ---------------------------------------------------------------------------
  # -- ProjectPipeline --
  # Using the resources defined above, the pipeline and it's parts is what 
  # moves things along

  # This pipeline contains three Stages: Source, Build, and Deploy.
  # - Source stage contains a single action that picks up changes from your repository.
  # - Build stage executes your AWS CodeBuild project.
  # - Deploy stage contains two actions:
  #   - The first action either creates a new stack / changeset containing your runtime resources.
  #   - The second action executes the changeset made in the previous action.

  ProjectPipeline:
    # The pipeline should only be created once all the resources it links to have been created.
    # This includes the AWS CodePipeline service role, the artifact bucket, the AWS CodeBuild build projectTemplateId
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
    - CodeBuildProject
    Condition: IsNotDevelopment
    Properties:
      Name: !Sub '${Prefix}-${ProjectId}-${StageId}-Pipeline'
      ArtifactStore:
        Location: !If [UseOwnS3DeployBucket, !Ref S3DeployBucket, !Ref DeployBucket ]
        Type: S3
      RoleArn: !GetAtt 'CodePipelineServiceRole.Arn'
      Stages:
      -
        Name: Source
        Actions:
        -
          Name: ApplicationSource
          ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeCommit
            Version: 1
          Configuration:
            BranchName: !Ref RepositoryBranch
            PollForSourceChanges: false
            RepositoryName: !Ref Repository
          InputArtifacts: []
          OutputArtifacts:
          - Name: !Sub "${ProjectId}-${StageId}-SourceArtifact"
          RunOrder: 1
      -
        Name: Build
        Actions:
        -
          Name: PackageExport
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Sub '${Prefix}-${ProjectId}-${StageId}-Build'
          InputArtifacts:
          - Name: !Sub "${ProjectId}-${StageId}-SourceArtifact"
          OutputArtifacts:
          - Name: !Sub "${ProjectId}-${StageId}-BuildArtifact"
          RunOrder: 1

  # ---------------------------------------------------------------------------
  # -- Pipeline Notifications --
  # Using the AlarmNotificationEmail parameter, send pipeline execution updates

  # ---------------------------------------------------------------------------
  # -- Pipeline Notifications --
  # Using the AlarmNotificationEmail parameter, send pipeline execution updates

  # Create SNS Topic for Pipeline notifications
  PipelineNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-pipeline-notifications
      Subscription:
        - Protocol: email
          Endpoint: !Ref AlarmNotificationEmail

  # EventBridge Rule for Pipeline Started events
  PipelineStartedRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${Prefix}-${ProjectId}-${StageId}-pipeline-started"
      Description: "Rule for CodePipeline execution started events"
      EventPattern:
        source:
          - "aws.codepipeline"
        detail-type:
          - "CodePipeline Pipeline Execution State Change"
        detail:
          state:
            - "STARTED"
          pipeline:
            - !Sub "${Prefix}-${ProjectId}-${StageId}-Pipeline"
      State: ENABLED
      Targets:
        - Arn: !Ref PipelineNotificationTopic
          Id: "PipelineStartedTarget"
          InputTransformer:
            InputPathsMap:
              "pipeline": "$.detail.pipeline"
              "state": "$.detail.state"
              "executionId": "$.detail.execution-id"
              "time": "$.time"
            InputTemplate: !Sub |
              {
                "Subject": "Pipeline <pipeline> Started",
                "Message": "Pipeline <pipeline> has STARTED.\nExecution ID: <executionId>\nTime: <time>\nView in console: https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${Prefix}-${ProjectId}-${StageId}-Pipeline/view?region=${AWS::Region}"
              }

  # EventBridge Rule for Pipeline Succeeded events
  PipelineSucceededRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${Prefix}-${ProjectId}-${StageId}-pipeline-succeeded"
      Description: "Rule for CodePipeline execution succeeded events"
      EventPattern:
        source:
          - "aws.codepipeline"
        detail-type:
          - "CodePipeline Pipeline Execution State Change"
        detail:
          state:
            - "SUCCEEDED"
          pipeline:
            - !Sub "${Prefix}-${ProjectId}-${StageId}-Pipeline"
      State: ENABLED
      Targets:
        - Arn: !Ref PipelineNotificationTopic
          Id: "PipelineSucceededTarget"
          InputTransformer:
            InputPathsMap:
              "pipeline": "$.detail.pipeline"
              "state": "$.detail.state"
              "executionId": "$.detail.execution-id"
              "time": "$.time"
            InputTemplate: !Sub |
              {
                "Subject": "Pipeline <pipeline> Succeeded",
                "Message": "Pipeline <pipeline> has SUCCEEDED.\nExecution ID: <executionId>\nTime: <time>\nView in console: https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${Prefix}-${ProjectId}-${StageId}-Pipeline/view?region=${AWS::Region}"
              }

  # EventBridge Rule for Pipeline Failed events
  PipelineFailedRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${Prefix}-${ProjectId}-${StageId}-pipeline-failed"
      Description: "Rule for CodePipeline execution failed events"
      EventPattern:
        source:
          - "aws.codepipeline"
        detail-type:
          - "CodePipeline Pipeline Execution State Change"
        detail:
          state:
            - "FAILED"
          pipeline:
            - !Sub "${Prefix}-${ProjectId}-${StageId}-Pipeline"
      State: ENABLED
      Targets:
        - Arn: !Ref PipelineNotificationTopic
          Id: "PipelineFailedTarget"
          InputTransformer:
            InputPathsMap:
              "pipeline": "$.detail.pipeline"
              "state": "$.detail.state"
              "executionId": "$.detail.execution-id"
              "time": "$.time"
            InputTemplate: !Sub |
              {
                "Subject": "ALERT: Pipeline <pipeline> Failed",
                "Message": "Pipeline <pipeline> has FAILED.\nExecution ID: <executionId>\nTime: <time>\nPlease check the pipeline for errors: https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${Prefix}-${ProjectId}-${StageId}-Pipeline/view?region=${AWS::Region}"
              }

  # Add required SNS topic policy to allow EventBridge to publish
  PipelineNotificationTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowEventBridgeToPublishEvents
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sns:Publish
            Resource: !Ref PipelineNotificationTopic
      Topics:
        - !Ref PipelineNotificationTopic


# =============================================================================
# OUTPUTS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#
# Place anything interesting that you would like to quickly refer to in 
# your cloudformation OUTPUT section. Test URLs, direct links to resources, etc
#

Outputs:
  ProjectPipeline:
    Description: "CodePipeline"
    Condition: IsNotDevelopment
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${Prefix}-${ProjectId}-${StageId}-Pipeline/view?region=${AWS::Region}"
  CodeCommitRepo:
    Description: "CodeCommitRepo"
    Value: !Join
      - ""
      - - !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codecommit/repositories/"
        - !Ref Repository
        - !Sub "/browse?region=${AWS::Region}"